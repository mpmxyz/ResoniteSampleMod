# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: MonkeyLoader.NET

on:
  push:
  pull_request:
  workflow_call:
    inputs:
      RELEASE_VERSION:
        description: "Release Version"
        type: string
        required: false
        default: ""
env:
  ResonitePath: "${{ github.workspace }}/Download/Resonite"
  ARTIFACT_NAME: SampleMod
  OUTPUT_NAME: mpmxyz.SampleMod
  OUTPUT_FOLDER_MONKEY: bin/Release MonkeyLoader
  OUTPUT_FOLDER_RML: bin/Release RML/net472
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Fetch repository
      uses: actions/checkout@v4
    - name: Fetch latest Resonite
      uses: actions/checkout@v4
      with:
        repository: mpmxyz/ResoniteFiles
        token: ${{ secrets.RESONITE_CLONE_TOKEN }}
        path: ${{ env.ResonitePath }}/..
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Prepare MonkeyLoader directories
      run: |
        mkdir -p "MonkeyLoader GamePacks"
        mkdir -p "MonkeyLoader Mods"
        mkdir -p "$ResonitePath/MonkeyLoader/GamePacks"
        mkdir -p "$ResonitePath/MonkeyLoader/Mods"
    - name: Prepare RML directories
      run: |
        mkdir -p "$ResonitePath/rml_mods"
        mkdir -p "$ResonitePath/rml_libs"
        mkdir -p "$ResonitePath/Libraries"
    - name: Fetch MonkeyLoader
      uses: duhow/download-github-release-assets@v1.1.1
      with:
        repository: Banane9/MonkeyLoader
        tag: v0.1.0-alpha
        target: MonkeyLoader/
        files: "MonkeyLoader*.zip"
    - name: Fetch latest ResoniteModLoader
      uses: duhow/download-github-release-assets@v1.1.1
      with:
        repository: resonite-modding-group/ResoniteModLoader
        release-id: latest
        target: RML/
        files: "*.dll"
    - name: Move files (ResoniteModLoader)
      run: |
        mv RML/0Harmony.dll "$ResonitePath/rml_libs/0Harmony.dll"
        mv RML/ResoniteModLoader.dll "$ResonitePath/Libraries/ResoniteModLoader.dll"
    - name: Move files (MonkeyLoader)
      run: |
        unzip -o MonkeyLoader/MonkeyLoader*.zip -d "$ResonitePath"
    - name: Restore dependencies
      run: |
        dotnet restore
    - name: Build (MonkeyLoader)
      run: dotnet build --no-restore --configuration "Release MonkeyLoader"
    - name: Build (ResoniteModLoader)
      run: |
        dotnet build --no-restore --configuration "Release RML"
        cd "${{ env.OUTPUT_FOLDER_RML }}"
        mkdir -p "archive/rml_mods"
        cp "${{ env.OUTPUT_NAME }}.dll" "archive/rml_mods/${{ env.OUTPUT_NAME }}.dll"
#        mkdir -p "archive/rml_libs"
    - name: Test (MonkeyLoader)
      run: dotnet test --no-build --verbosity normal --configuration "Release MonkeyLoader"
    - name: Test (ResoniteModLoader)
      run: dotnet test --no-build --verbosity normal --configuration "Release RML"
    - name: Upload build artifacts (MonkeyLoader)
      if: ${{ inputs.RELEASE_VERSION }}
      uses: actions/upload-artifact@v3.1.3
      with: 
        name: ${{ env.ARTIFACT_NAME }}-MonkeyLoader.nupkg
        path: ${{ env.OUTPUT_FOLDER_MONKEY }}/${{ env.OUTPUT_NAME }}.${{ inputs.RELEASE_VERSION }}.nupkg
    - name: Upload build artifacts (ResoniteModLoader)
      if: ${{ inputs.RELEASE_VERSION }}
      uses: actions/upload-artifact@v3.1.3
      with: 
        name: ${{ env.ARTIFACT_NAME }}-ResoniteModLoader
        path: ${{ env.OUTPUT_FOLDER_RML }}/archive/

# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: MonkeyLoader.NET

on:
  push:
    branches: [ "main", "workflow-dev" ]
    tags: 'v*'
  pull_request:
    branches: [ "main" ]
env:
  ResonitePath: "Download/Resonite"
  GITHUB: "true"
  IS_RELEASE: ${{ github.ref_type == 'tag' && startsWith(github.ref_name, 'v') }}
  BUILD_VERSION: 1.0.0
  DOWNLOAD_NAME: SampleMod
  PACKAGE_NAME: mpmxyz.SampleMod
  MONKEY_OUTPUT_FOLDER: bin/Release MonkeyLoader
  RML_OUTPUT_FOLDER: bin/Release RML
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Fetch repository
      uses: actions/checkout@v4
    - name: Fetch latest Resonite
      uses: actions/checkout@v4
      with:
        repository: mpmxyz/ResoniteFiles
        token: ${{ secrets.resonite_clone_token }}
        path: ${{ env.ResonitePath }}/..
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Prepare MonkeyLoader directories
      run: |
        mkdir -p "MonkeyLoader GamePacks"
        mkdir -p "MonkeyLoader Mods"
    - name: Prepare RML directories
      run: |
        mkdir -p "$ResonitePath/rml_libs"
        mkdir -p "$ResonitePath/Libraries"
    - name: Fetch MonkeyLoader
      uses: duhow/download-github-release-assets@v1.1.1
      with:
        repository: Banane9/MonkeyLoader
        tag: v0.1.0-alpha
        target: MonkeyLoader/
        files: "MonkeyLoader*.zip"
    - name: Fetch latest ResoniteModLoader
      uses: duhow/download-github-release-assets@v1.1.1
      with:
        repository: resonite-modding-group/ResoniteModLoader
        release-id: latest
        target: RML/
        files: "*.dll"
    - name: Move files (ResoniteModLoader)
      run: |
        mv RML/0Harmony.dll "$ResonitePath/rml_libs/0Harmony.dll"
        mv RML/ResoniteModLoader.dll "$ResonitePath/Libraries/ResoniteModLoader.dll"
    - name: Move files (MonkeyLoader)
      run: |
        unzip -o MonkeyLoader/MonkeyLoader*.zip -d "$ResonitePath"
        nuget init "$ResonitePath/MonkeyLoader/GamePacks" "MonkeyLoader GamePacks"
    - name: Restore dependencies
      run: |
        dotnet restore
    - name: Build (MonkeyLoader)
      run: dotnet build --no-restore --configuration "Release MonkeyLoader"
    - name: Build (ResoniteModLoader)
      run: |
        dotnet build --no-restore --configuration "Release RML"
        cd "${{ RML_OUTPUT_FOLDER }}"
        mkdir -p "archive"
        cp TODO TODO
#    - name: Test (MonkeyLoader)
#      run: dotnet test --no-build --verbosity normal --configuration "Release MonkeyLoader"
#    - name: Test (ResoniteModLoader)
#      run: dotnet test --no-build --verbosity normal --configuration "Release RML"
    - name: Upload build artifacts (MonkeyLoader)
      if: ${{ env.IS_RELEASE }}
      uses: actions/upload-artifact@v3.1.3
      with: 
        name: ${{ env.DOWNLOAD_NAME }}-MonkeyLoader.nupkg
        path: ${{ env.MONKEY_OUTPUT_FOLDER }}/${{ env.PACKAGE_NAME }}.${{ env.BUILD_VERSION }}.nupkg
    - name: Upload build artifacts (ResoniteModLoader)
      if: ${{ env.IS_RELEASE }}
      uses: actions/upload-artifact@v3.1.3
      with: 
        name: ${{ env.DOWNLOAD_NAME }}-ResoniteModLoader
        path: ${{ env.RML_OUTPUT_FOLDER }}/${{ env.PACKAGE_NAME }}.${{ env.BUILD_VERSION }}.nupkg

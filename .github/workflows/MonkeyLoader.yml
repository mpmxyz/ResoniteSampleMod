# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: MonkeyLoader.NET

on:
  push:
    branches: [ "main", "workflow-dev" ]
  pull_request:
    branches: [ "main" ]
env:
  ResonitePath: "Download/Resonite"
  GITHUB: "true"
  BUILD_VERSION: ${{ github.ref_name }}
  PACKAGE_NAME: SampleMod
  PACKAGE_FILE: bin/Release MonkeyLoader/SampleMod.${{ env.BUILD_VERSION }}.nupkg
  NUGET_PUBLISH_TARGET: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Fetch Repository
      uses: actions/checkout@v4
    - name: Fetch latest Resonite
      uses: actions/checkout@v4
      with:
        repository: mpmxyz/ResoniteFiles
        token: ${{ secrets.resonite_clone_token }}
        path: ${{ env.ResonitePath }}/..
    - name: Prepare MonkeyLoader Directories
      run: |
        mkdir "MonkeyLoader GamePacks"
        mkdir "MonkeyLoader Mods"
    - name: Prepare RML Directories
      run: |
        mkdir -p "$ResonitePath/rml_libs"
        mkdir -p "$ResonitePath/Libraries"
    - name: Fetch latest MonkeyLoader
      uses: duhow/download-github-release-assets@v1.1.1
      with:
        repository: Banane9/MonkeyLoader
        release-id: latest
        target: MonkeyLoader/
        files: "MonkeyLoader*.zip"
    - name: Fetch latest ResoniteModLoader
      uses: duhow/download-github-release-assets@v1.1.1
      with:
        repository: resonite-modding-group/ResoniteModLoader
        release-id: latest
        target: RML/
        files: "*.dll"
    - name: Move ResoniteModLoader Files
      run: |
        mv RML/0Harmony.dll "$ResonitePath/rml_libs/0Harmony.dll"
        mv RML/ResoniteModLoader.dll "$ResonitePath/Libraries/ResoniteModLoader.dll"
    - name: Move MonkeyLoader Files
      run: |
        unzip -o MonkeyLoader/MonkeyLoader*.zip -d "$ResonitePath"
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Move MonkeyLoader GamePack
      run: |
        nuget init "$ResonitePath/MonkeyLoader/GamePacks" "MonkeyLoader GamePacks"
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration "Release MonkeyLoader"
#    - name: Test
#      run: dotnet test --no-build --verbosity normal
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with: 
        name: ${{ env.PACKAGE_NAME }}.nupkg
        path: ${{ env.PACKAGE_FILE }}
    - name: Add Repo Owner NuGet Package Source
      run: dotnet nuget add source --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name publish_target "${{ env.PUBLISH_TARGET }}"
    - name: Publish to NuGet Feed
      run: dotnet nuget push "${{ env.PACKAGE_FILE }}"  --api-key ${{ secrets.GITHUB_TOKEN }} --source "publish_target"

<Project InitialTargets="CheckReleaseVersion" Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <AssemblyName>mpmxyz.SampleMod</AssemblyName>
    <Authors>mpmxyz</Authors>
    <TargetFramework>net472</TargetFramework>
    <AssemblyTitle>SampleMod</AssemblyTitle>
    <Product>SampleMod</Product>
    <Description>A sample Resonite Mod</Description>
    <Copyright>CC0</Copyright>
    <Version>1.0.0</Version>
    <PackageProjectUrl>https://github.com/mpmxyz/ResoniteSampleMod</PackageProjectUrl>
    <PackageReleaseNotes>Summary of changes made in this release of the package.</PackageReleaseNotes>
    <PackageTags>Resonite</PackageTags>
    <Configurations>Debug RML;Release RML;Debug MonkeyLoader;Release MonkeyLoader</Configurations>
    <BaseOutputPath>bin\</BaseOutputPath>
    <IsRML>false</IsRML>
    <IsMonkeyLoader>false</IsMonkeyLoader>
  </PropertyGroup>
  <Target Name="CheckReleaseVersion">
	  <Error
		  Condition="$(RELEASE_VERSION) != '' And $(RELEASE_VERSION) != $(Version)"
		  Text="Difference between version being built ($(Version)) and version being published on the github flow! ($(RELEASE_VERSION))
Ensure that the versions in the csproj file and in your release flow trigger match!"/>
  </Target>
  <PropertyGroup Condition="'$(Configuration)' == 'Debug RML' Or '$(Configuration)' == 'Release RML'">
    <IsRML>true</IsRML>
    <PostBuildEvent Condition="$([MSBuild]::IsOSPlatform('Windows'))">
      copy /Y "$(AssemblyName).dll" "$(ResonitePath)\rml_mods\"
	</PostBuildEvent>
    <PostBuildEvent Condition="$([MSBuild]::IsOSPlatform('Linux'))">
      cp -f "$(AssemblyName).dll" "$(ResonitePath)/rml_mods/"
	</PostBuildEvent>
    <StartAction>Program</StartAction>
    <StartProgram>$(ResonitePath)\Resonite.exe</StartProgram>
    <StartArguments>-Screen -CachePath "$(ResoniteCache)" -LoadAssembly Libraries/ResoniteModLoader.dll</StartArguments>
    <StartWorkingDirectory>$(ResonitePath)</StartWorkingDirectory>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Debug MonkeyLoader' Or '$(Configuration)' == 'Release MonkeyLoader'">
    <IsMonkeyLoader>true</IsMonkeyLoader>
	<IsPackable>true</IsPackable>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <StartAction>Program</StartAction>
    <StartProgram>$(ResonitePath)\Resonite.exe</StartProgram>
    <StartArguments>-Screen -CachePath "$(ResoniteCache)"</StartArguments>
    <StartWorkingDirectory>$(ResonitePath)</StartWorkingDirectory>
  </PropertyGroup>
  <Target Name="ExtractInstalledMonkeyMods" BeforeTargets="Restore;CollectPackageReferences" Condition="$(IsMonkeyLoader)">
	  <Exec Condition="$([MSBuild]::IsOSPlatform('Windows'))"
          Command="
          nuget init &quot;$(ResonitePath)\MonkeyLoader\GamePacks&quot; &quot;$(MSBuildProjectDirectory)\MonkeyLoader Gamepacks&quot;
          nuget init &quot;$(ResonitePath)\MonkeyLoader\Mods&quot; &quot;$(MSBuildProjectDirectory)\MonkeyLoader Mods&quot;"/>
	  <Exec Condition="$([MSBuild]::IsOSPlatform('Linux'))"
		  Command="
          nuget init &quot;$(ResonitePath)/MonkeyLoader/GamePacks&quot; &quot;$(MSBuildProjectDirectory)/MonkeyLoader Gamepacks&quot;
          nuget init &quot;$(ResonitePath)/MonkeyLoader/Mods&quot; &quot;$(MSBuildProjectDirectory)/MonkeyLoader Mods&quot;"/>
  </Target>
  <Target Name="MovePack" AfterTargets="Pack" Condition="$(IsMonkeyLoader)">
    <Exec
      Condition="$([MSBuild]::IsOSPlatform('Windows'))"
      Command="copy /Y &quot;$(OutputPath)\..\$(AssemblyName).$(Version).nupkg&quot; &quot;$(ResonitePath)\MonkeyLoader\Mods\$(AssemblyName).nupkg&quot;"/>
    <Exec
      Condition="$([MSBuild]::IsOSPlatform('Linux'))"
      Command="cp -f &quot;$(OutputPath)/../$(AssemblyName).$(Version).nupkg&quot; &quot;$(ResonitePath)/MonkeyLoader/Mods/$(AssemblyName).nupkg&quot;"/>
  </Target>
  <PropertyGroup>
    <DefaultItemExcludes>$(DefaultItemExcludes);obj/**</DefaultItemExcludes>
  </PropertyGroup>
  <ItemGroup>
    <Compile Remove="MonkeyLoader Gamepacks\**" />
    <Compile Remove="Test\**" />
    <EmbeddedResource Remove="MonkeyLoader Gamepacks\**" />
    <EmbeddedResource Remove="Test\**" />
    <None Remove="MonkeyLoader Gamepacks\**" />
    <None Remove="Test\**" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Assembly-CSharp">
      <HintPath>$(ResonitePath)\Resonite_Data\Managed\Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="Elements.Assets">
      <HintPath>$(ResonitePath)\Resonite_Data\Managed\Elements.Assets.dll</HintPath>
    </Reference>
    <Reference Include="Elements.Core">
      <HintPath>$(ResonitePath)\Resonite_Data\Managed\Elements.Core.dll</HintPath>
    </Reference>
    <Reference Include="Elements.Quantity">
      <HintPath>$(ResonitePath)\Resonite_Data\Managed\Elements.Quantity.dll</HintPath>
    </Reference>
    <Reference Include="FrooxEngine">
      <HintPath>$(ResonitePath)\Resonite_Data\Managed\FrooxEngine.dll</HintPath>
    </Reference>
    <Reference Include="FrooxEngine.Commands">
      <HintPath>$(ResonitePath)\Resonite_Data\Managed\FrooxEngine.Commands.dll</HintPath>
    </Reference>
    <Reference Include="FrooxEngine.Weaver">
      <HintPath>$(ResonitePath)\Resonite_Data\Managed\FrooxEngine.Weaver.dll</HintPath>
    </Reference>
    <Reference Include="ProtoFlux.Core">
      <HintPath>$(ResonitePath)\Resonite_Data\Managed\ProtoFlux.Core.dll</HintPath>
    </Reference>
    <Reference Include="ProtoFlux.Nodes.Core">
      <HintPath>$(ResonitePath)\Resonite_Data\Managed\ProtoFlux.Nodes.Core.dll</HintPath>
    </Reference>
    <Reference Include="ProtoFlux.Nodes.FrooxEngine">
      <HintPath>$(ResonitePath)\Resonite_Data\Managed\ProtoFlux.Nodes.FrooxEngine.dll</HintPath>
    </Reference>
    <Reference Include="ProtoFluxBindings">
      <HintPath>$(ResonitePath)\Resonite_Data\Managed\ProtoFluxBindings.dll</HintPath>
    </Reference>
    <Reference Include="ResoniteModLoader">
      <HintPath>$(ResonitePath)\Libraries\ResoniteModLoader.dll</HintPath>
    </Reference>
    <Reference Include="QuantityX">
      <HintPath>$(ResonitePath)\Resonite_Data\Managed\QuantityX.dll</HintPath>
    </Reference>
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>
  <ItemGroup Condition="$(IsRML)">
    <Reference Include="Harmony">
      <HintPath>$(ResonitePath)\rml_libs\0Harmony.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup Condition="$(IsMonkeyLoader)">
    <Compile Update="SampleModMonkey.cs" />
    <Reference Include="Harmony">
      <HintPath>$(ResonitePath)\0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="MonkeyLoader">
      <HintPath>$(ResonitePath)\MonkeyLoader.dll</HintPath>
    </Reference>
    <PackageReference Include="MonkeyLoader.GamePacks.Resonite" Version="1.0.1" />    
  </ItemGroup>
  <ItemGroup>
    <InternalsVisibleTo Include="Test" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="SampleModRML.cs" Condition="!$(IsRML)" />
    <Compile Remove="SampleModMonkey.cs" Condition="!$(IsMonkeyLoader)" />
    <Compile Remove="obj\Debug RML\net472\SampleMod.AssemblyInfo.cs" />
    <Compile Remove="obj\Debug RML\net472\.NETFramework,Version=v4.7.2.AssemblyAttributes.cs" />
    <Compile Remove="obj\Debug MonkeyLoader\net472\SampleMod.AssemblyInfo.cs" />
    <Compile Remove="obj\Debug MonkeyLoader\net472\.NETFramework,Version=v4.7.2.AssemblyAttributes.cs" />
    <Compile Remove="obj\Release RML\net472\SampleMod.AssemblyInfo.cs" />
    <Compile Remove="obj\Release RML\net472\.NETFramework,Version=v4.7.2.AssemblyAttributes.cs" />
    <Compile Remove="obj\Release MonkeyLoader\net472\SampleMod.AssemblyInfo.cs" />
    <Compile Remove="obj\Release MonkeyLoader\net472\.NETFramework,Version=v4.7.2.AssemblyAttributes.cs" />
  </ItemGroup>
  <ItemGroup>
	  <Folder Remove="Test" />
  </ItemGroup>
</Project>